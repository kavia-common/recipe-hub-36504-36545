{"is_source_file": true, "format": "Python", "description": "This file defines API route handlers for managing recipes in a FastAPI application. It includes endpoints for creating, listing, retrieving, updating, and deleting recipes, utilizing dependency injections for database access and user authentication.", "external_files": ["./db", "./schemas", "./models", "./dependencies/auth", "./services/recipe_service", "./utils/pagination"], "external_methods": ["get_db", "current_user", "recipe_owned_by_current_user", "create_user_recipe", "list_all_recipes", "list_user_recipes", "get_recipe_or_404", "update_user_recipe", "delete_user_recipe", "paginate_items"], "published": ["router"], "classes": [], "methods": [{"name": "Recipe create_recipe(payload: RecipeCreate, db: Session = Depends(get_db), user: User = Depends(current_user))", "description": "Handles POST requests to create a new recipe associated with the current user.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] list_recipes( db: Session = Depends(get_db), page: int = Query(1, ge=1, description=\"1-based page number\"), page_size: int = Query(10, ge=1, le=100, description=\"Items per page\"), )", "description": "Handles GET requests to list all recipes with pagination.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] list_my_recipes( db: Session = Depends(get_db), user: User = Depends(current_user), page: int = Query(1, ge=1, description=\"1-based page number\"), page_size: int = Query(10, ge=1, le=100, description=\"Items per page\"), )", "description": "Handles GET requests to list recipes owned by the current user with pagination.", "scope": "", "scopeKind": ""}, {"name": "Recipe get_recipe(recipe_id: int, db: Session = Depends(get_db))", "description": "Handles GET requests to fetch a specific recipe by ID, raising 404 if not found.", "scope": "", "scopeKind": ""}, {"name": "Recipe update_recipe( recipe_id: int, payload: RecipeUpdate, db: Session = Depends(get_db), recipe: Recipe = Depends(recipe_owned_by_current_user), )", "description": "Handles PATCH requests to update a recipe owned by the current user.", "scope": "", "scopeKind": ""}, {"name": "delete_recipe( recipe_id: int, db: Session = Depends(get_db), recipe: Recipe = Depends(recipe_owned_by_current_user), )", "description": "Handles DELETE requests to remove a recipe owned by the current user.", "scope": "", "scopeKind": ""}], "calls": ["create_user_recipe", "list_all_recipes", "list_user_recipes", "get_recipe_or_404", "update_user_recipe", "delete_user_recipe", "paginate_items"], "search-terms": ["recipe API endpoints", "FastAPI router for recipes", "CRUD operations for recipes", "recipe dependency injection", "pagination in recipes"], "state": 2, "file_id": 13, "knowledge_revision": 44, "git_revision": "cce94d8f2aca9047abcb3c481617b801b7162043", "revision_history": [{"28": "1138e7806045c25e518089c2fc590a5b78681399"}, {"38": "1138e7806045c25e518089c2fc590a5b78681399"}, {"44": "cce94d8f2aca9047abcb3c481617b801b7162043"}], "ctags": [{"_type": "tag", "name": "create_recipe", "path": "/home/kavia/workspace/code-generation/recipe-hub-36504-36545/recipe_backend/src/api/routers_recipes.py", "pattern": "/^def create_recipe(payload: RecipeCreate, db: Session = Depends(get_db), user: User = Depends(cur/", "language": "Python", "typeref": "typename:Recipe", "kind": "function", "signature": "(payload: RecipeCreate, db: Session = Depends(get_db), user: User = Depends(current_user))"}, {"_type": "tag", "name": "delete_recipe", "path": "/home/kavia/workspace/code-generation/recipe-hub-36504-36545/recipe_backend/src/api/routers_recipes.py", "pattern": "/^def delete_recipe($/", "language": "Python", "kind": "function", "signature": "( recipe_id: int, db: Session = Depends(get_db), recipe: Recipe = Depends(recipe_owned_by_current_user), )"}, {"_type": "tag", "name": "get_recipe", "path": "/home/kavia/workspace/code-generation/recipe-hub-36504-36545/recipe_backend/src/api/routers_recipes.py", "pattern": "/^def get_recipe(recipe_id: int, db: Session = Depends(get_db)) -> Recipe:$/", "language": "Python", "typeref": "typename:Recipe", "kind": "function", "signature": "(recipe_id: int, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "list_my_recipes", "path": "/home/kavia/workspace/code-generation/recipe-hub-36504-36545/recipe_backend/src/api/routers_recipes.py", "pattern": "/^def list_my_recipes($/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "( db: Session = Depends(get_db), user: User = Depends(current_user), page: int = Query(1, ge=1, description=\"1-based page number\"), page_size: int = Query(10, ge=1, le=100, description=\"Items per page\"), )"}, {"_type": "tag", "name": "list_recipes", "path": "/home/kavia/workspace/code-generation/recipe-hub-36504-36545/recipe_backend/src/api/routers_recipes.py", "pattern": "/^def list_recipes($/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "( db: Session = Depends(get_db), page: int = Query(1, ge=1, description=\"1-based page number\"), page_size: int = Query(10, ge=1, le=100, description=\"Items per page\"), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/recipe-hub-36504-36545/recipe_backend/src/api/routers_recipes.py", "pattern": "/^router = APIRouter(prefix=\"\\/recipes\", tags=[\"recipes\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_recipe", "path": "/home/kavia/workspace/code-generation/recipe-hub-36504-36545/recipe_backend/src/api/routers_recipes.py", "pattern": "/^def update_recipe($/", "language": "Python", "typeref": "typename:Recipe", "kind": "function", "signature": "( recipe_id: int, payload: RecipeUpdate, db: Session = Depends(get_db), recipe: Recipe = Depends(recipe_owned_by_current_user), )"}], "hash": "35525ddb7d716a0ea8308a2b14b9a599", "format-version": 4, "code-base-name": "recipe_backend", "filename": "recipe_backend/src/api/routers_recipes.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/recipes\", tags=[\"recipes\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}