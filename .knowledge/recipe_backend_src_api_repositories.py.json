{"is_source_file": true, "format": "Python", "description": "This file contains repository functions for managing User and Recipe objects, including CRUD operations and authentication logic, interacting with a SQLAlchemy ORM database session.", "external_files": ["./models", "./security"], "external_methods": ["hash_password"], "published": ["get_user_by_email", "create_user", "authenticate_user", "list_users", "update_user", "delete_user", "create_recipe", "get_recipe", "list_recipes", "update_recipe", "delete_recipe"], "classes": [], "methods": [{"name": "Optional[User] get_user_by_email(db: Session, email: str)", "description": "Retrieve a user object from the database by email address.", "scope": "", "scopeKind": ""}, {"name": "User create_user(db: Session, email: str, password: str, full_name: Optional[str] = None)", "description": "Create a new user with a hashed password and save it to the database.", "scope": "", "scopeKind": ""}, {"name": "Optional[User] authenticate_user(db: Session, email: str, password: str)", "description": "Verify user credentials by comparing stored hashed password with the hash of input password.", "scope": "", "scopeKind": ""}, {"name": "List[User] list_users(db: Session)", "description": "Return a list of all users ordered by descending ID.", "scope": "", "scopeKind": ""}, {"name": "User update_user(db: Session, user: User, full_name: Optional[str] = None, password: Optional[str] = None)", "description": "Update full name and/or password of an existing user.", "scope": "", "scopeKind": ""}, {"name": "None delete_user(db: Session, user: User)", "description": "Remove a user record from the database.", "scope": "", "scopeKind": ""}, {"name": "Recipe create_recipe(db: Session, owner_id: int, title: str, description: str = None, ingredients: str = None, instructions: str = None)", "description": "Create and store a new recipe linked to an owner.", "scope": "", "scopeKind": ""}, {"name": "Optional[Recipe] get_recipe(db: Session, recipe_id: int)", "description": "Retrieve a recipe by its ID.", "scope": "", "scopeKind": ""}, {"name": "List[Recipe] list_recipes(db: Session, owner_id: Optional[int] = None)", "description": "List all recipes, optionally filtered by owner ID.", "scope": "", "scopeKind": ""}, {"name": "Recipe update_recipe(db: Session, recipe: Recipe, **fields)", "description": "Update fields of an existing recipe.", "scope": "", "scopeKind": ""}, {"name": "None delete_recipe(db: Session, recipe: Recipe)", "description": "Remove a recipe from the database.", "scope": "", "scopeKind": ""}], "calls": ["db.query", "db.add", "db.commit", "db.refresh", "db.delete", "hash_password", "User.email", "User.hashed_password", "User.id", "Recipe.owner_id", "Recipe.title", "Recipe.description", "Recipe.ingredients", "Recipe.instructions", "Recipe.id"], "search-terms": ["repository functions", "user management", "recipe management", "CRUD operations", "SQLAlchemy", "database session", "authentication", "models", "recipe_backend"], "state": 2, "file_id": 10, "knowledge_revision": 22, "git_revision": "", "ctags": [{"_type": "tag", "name": "authenticate_user", "path": "/home/kavia/workspace/code-generation/recipe-hub-36504-36545/recipe_backend/src/api/repositories.py", "pattern": "/^def authenticate_user(db: Session, email: str, password: str) -> Optional[User]:$/", "language": "Python", "typeref": "typename:Optional[User]", "kind": "function", "signature": "(db: Session, email: str, password: str)"}, {"_type": "tag", "name": "create_recipe", "path": "/home/kavia/workspace/code-generation/recipe-hub-36504-36545/recipe_backend/src/api/repositories.py", "pattern": "/^def create_recipe(db: Session, owner_id: int, title: str, description: str = None, ingredients: /", "language": "Python", "typeref": "typename:Recipe", "kind": "function", "signature": "(db: Session, owner_id: int, title: str, description: str = None, ingredients: str = None, instructions: str = None)"}, {"_type": "tag", "name": "create_user", "path": "/home/kavia/workspace/code-generation/recipe-hub-36504-36545/recipe_backend/src/api/repositories.py", "pattern": "/^def create_user(db: Session, email: str, password: str, full_name: Optional[str] = None) -> User/", "language": "Python", "typeref": "typename:User", "kind": "function", "signature": "(db: Session, email: str, password: str, full_name: Optional[str] = None)"}, {"_type": "tag", "name": "delete_recipe", "path": "/home/kavia/workspace/code-generation/recipe-hub-36504-36545/recipe_backend/src/api/repositories.py", "pattern": "/^def delete_recipe(db: Session, recipe: Recipe) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(db: Session, recipe: Recipe)"}, {"_type": "tag", "name": "delete_user", "path": "/home/kavia/workspace/code-generation/recipe-hub-36504-36545/recipe_backend/src/api/repositories.py", "pattern": "/^def delete_user(db: Session, user: User) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(db: Session, user: User)"}, {"_type": "tag", "name": "get_recipe", "path": "/home/kavia/workspace/code-generation/recipe-hub-36504-36545/recipe_backend/src/api/repositories.py", "pattern": "/^def get_recipe(db: Session, recipe_id: int) -> Optional[Recipe]:$/", "language": "Python", "typeref": "typename:Optional[Recipe]", "kind": "function", "signature": "(db: Session, recipe_id: int)"}, {"_type": "tag", "name": "get_user_by_email", "path": "/home/kavia/workspace/code-generation/recipe-hub-36504-36545/recipe_backend/src/api/repositories.py", "pattern": "/^def get_user_by_email(db: Session, email: str) -> Optional[User]:$/", "language": "Python", "typeref": "typename:Optional[User]", "kind": "function", "signature": "(db: Session, email: str)"}, {"_type": "tag", "name": "list_recipes", "path": "/home/kavia/workspace/code-generation/recipe-hub-36504-36545/recipe_backend/src/api/repositories.py", "pattern": "/^def list_recipes(db: Session, owner_id: Optional[int] = None) -> List[Recipe]:$/", "language": "Python", "typeref": "typename:List[Recipe]", "kind": "function", "signature": "(db: Session, owner_id: Optional[int] = None)"}, {"_type": "tag", "name": "list_users", "path": "/home/kavia/workspace/code-generation/recipe-hub-36504-36545/recipe_backend/src/api/repositories.py", "pattern": "/^def list_users(db: Session) -> List[User]:$/", "language": "Python", "typeref": "typename:List[User]", "kind": "function", "signature": "(db: Session)"}, {"_type": "tag", "name": "update_recipe", "path": "/home/kavia/workspace/code-generation/recipe-hub-36504-36545/recipe_backend/src/api/repositories.py", "pattern": "/^def update_recipe(db: Session, recipe: Recipe, **fields) -> Recipe:$/", "language": "Python", "typeref": "typename:Recipe", "kind": "function", "signature": "(db: Session, recipe: Recipe, **fields)"}, {"_type": "tag", "name": "update_user", "path": "/home/kavia/workspace/code-generation/recipe-hub-36504-36545/recipe_backend/src/api/repositories.py", "pattern": "/^def update_user(db: Session, user: User, full_name: Optional[str] = None, password: Optional[str/", "language": "Python", "typeref": "typename:User", "kind": "function", "signature": "(db: Session, user: User, full_name: Optional[str] = None, password: Optional[str] = None)"}], "hash": "78e9127b18487e4ed27680c210d7be22", "format-version": 4, "code-base-name": "recipe_backend", "filename": "recipe_backend/src/api/repositories.py", "revision_history": [{"22": ""}]}